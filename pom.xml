<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ai.realitydefender</groupId>
  <artifactId>realitydefender-sdk</artifactId>
  <version>0.1.0</version>
  <packaging>jar</packaging>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>Java SDK for the Reality Defender API to detect deepfakes and manipulated media</description>
  <url>https://github.com/Reality-Defender/realitydefender-sdk-java</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Reality Defender Team</name>
      <email>support@realitydefender.ai</email>
      <organization>Reality Defender</organization>
      <organizationUrl>https://realitydefender.ai</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/Reality-Defender/realitydefender-sdk-java.git</connection>
    <developerConnection>scm:git:ssh://github.com:Reality-Defender/realitydefender-sdk-java.git</developerConnection>
    <url>https://github.com/Reality-Defender/realitydefender-sdk-java</url>
  </scm>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Dependency versions -->
    <okhttp.version>4.12.0</okhttp.version>
    <jackson.version>2.19.1</jackson.version>
    <slf4j.version>2.0.10</slf4j.version>

    <!-- Test dependency versions -->
    <junit.version>5.13.4</junit.version>
    <mockito.version>5.19.0</mockito.version>
    <wiremock.version>3.13.1</wiremock.version>

    <!-- Plugin versions -->
    <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.2.3</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.2.3</maven-failsafe-plugin.version>
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
    <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
    <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>

    <!-- GraalVM versions -->
    <native-maven-plugin.version>0.10.3</native-maven-plugin.version>
    <junit-platform-native.version>0.10.3</junit-platform-native.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp-bom</artifactId>
        <version>${okhttp.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>${slf4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- HTTP Client -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
    </dependency>

    <!-- JSON Processing -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
    </dependency>

    <!-- Annotations -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.24.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- GraalVM Native Testing Support -->
    <dependency>
      <groupId>org.graalvm.buildtools</groupId>
      <artifactId>junit-platform-native</artifactId>
      <version>${junit-platform-native.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- Surefire Plugin for Unit Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
          </includes>
        </configuration>
      </plugin>

      <!-- Failsafe Plugin for Integration Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*IT.java</include>
            <include>**/*IntegrationTest.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo Plugin for Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.50</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Javadoc Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <source>11</source>
        </configuration>
      </plugin>

      <!-- Source Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Spotless Plugin for Code Formatting -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>1.19.1</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <removeUnusedImports/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </java>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Shade plugin (to generate JARs) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <minimizeJar>true</minimizeJar>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>module-info.class</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- GPG Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.2.7</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
            <configuration>
              <signer>bc</signer>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Publishing plugin -->
      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>0.8.0</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
          <autoPublish>true</autoPublish>
          <waitUntil>published</waitUntil>
          <centralSnapshotsUrl>https://central.sonatype.com/repository/maven-snapshots/</centralSnapshotsUrl>
        </configuration>
      </plugin>

      <!-- Exec plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <mainClass>ai.realitydefender.examples.SimpleFileDetectionExample</mainClass>
          <cleanupDaemonThreads>false</cleanupDaemonThreads>
          <classpathScope>runtime</classpathScope>
        </configuration>
        <executions>
          <execution>
            <id>simple-example</id>
            <configuration>
              <mainClass>ai.realitydefender.examples.SimpleFileDetectionExample</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>get-results-example</id>
            <configuration>
              <mainClass>ai.realitydefender.examples.GetResultsExample</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>social-media-detection-example</id>
            <configuration>
              <mainClass>ai.realitydefender.examples.SocialMediaDetectionExample</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>simple-example-native</id>
            <configuration>
              <executable>${project.build.directory}/simple-example</executable>
            </configuration>
          </execution>
          <execution>
            <id>get-results-example-native</id>
            <configuration>
              <executable>${project.build.directory}/get-results-example</executable>
            </configuration>
          </execution>
          <execution>
            <id>social-media-example-native</id>
            <configuration>
              <executable>${project.build.directory}/social-media-example</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <fallback>false</fallback>
              <verbose>true</verbose>
              <buildArgs>
                <buildArg>--no-fallback</buildArg>
                <buildArg>--enable-http</buildArg>
                <buildArg>--enable-https</buildArg>
                <buildArg>--enable-url-protocols=http,https</buildArg>
                <buildArg>--initialize-at-build-time=org.mockito</buildArg>
                <buildArg>--initialize-at-run-time=ai.realitydefender</buildArg>
                <buildArg>--allow-incomplete-classpath</buildArg>
                <buildArg>--report-unsupported-elements-at-runtime</buildArg>
              </buildArgs>
            </configuration>
            <executions>
              <execution>
                <id>build-simple-example-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <mainClass>ai.realitydefender.examples.SimpleFileDetectionExample</mainClass>
                  <imageName>simple-example</imageName>
                </configuration>
              </execution>
              <execution>
                <id>build-get-results-example-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <mainClass>ai.realitydefender.examples.GetResultsExample</mainClass>
                  <imageName>get-results-example</imageName>
                </configuration>
              </execution>
              <execution>
                <id>build-social-media-example-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <mainClass>ai.realitydefender.examples.SocialMediaDetectionExample</mainClass>
                  <imageName>social-media-example</imageName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>minimal</id>
      <dependencies>
        <dependency>
          <groupId>com.squareup.okhttp3</groupId>
          <artifactId>okhttp</artifactId>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <optional>true</optional>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
