name: Build and publish Java SDK

on:
  workflow_call:
    inputs:
      is-release:
        default: false
        type: boolean
        description: Whether this is a release package ready to be published or not.
    secrets:
      maven-central-username:
        required: false
        description: Maven repository username.
      maven-central-password:
        required: false
        description: Maven repository password.
      gpg-key:
        required: false
        description: Key to sign the public deliverable.
      gpg-passphrase:
        required: false
        description: Passphrase of the aforementioned GPG signing key.

  workflow_dispatch:
    inputs:
      is-release:
        default: false
        type: boolean
        description: Whether this is a release package ready to be published or not.

jobs:
  build-publish-java-sdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tag version
        run: |
          echo "SDK_VERSION=$(git describe --tags --abbrev=0 | cut -c2-)" >> $GITHUB_ENV

      - name: Create nightly version, if applicable.
        if: ${{ inputs.is-release == false }}
        run: |
          echo "SDK_VERSION=${{ env.SDK_VERSION }}+git$(date +'%Y%m%d').$(git rev-parse --short HEAD)-${{ github.run_attempt }}" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          java-package: jdk
          server-id: central
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set the library version.
        run: |
          mvn versions:set -DnewVersion=${{ env.SDK_VERSION }}

      - name: Build and package project
        run: mvn clean compile package

      - name: Share artifacts.
        uses: actions/upload-artifact@v4
        with:
          name: "realitydefender-sdk-java-${{ env.SDK_VERSION }}"
          path: |
            target/*.jar
          retention-days: 14
          if-no-files-found: error

      - name: Publish
        if: ${{ inputs.is-release == true }}
        run: mvn --batch-mode --no-transfer-progress deploy -DskipTests --settings settings.xml
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.maven-central-username }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.maven-central-password }}
          MAVEN_GPG_KEY: ${{ secrets.gpg-key }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}


